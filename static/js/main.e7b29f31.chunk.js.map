{"version":3,"sources":["logo.svg","twitter.svg","components/Quotes.js","App.js","reportWebVitals.js","index.js"],"names":["Quotes","useState","quote","setQuote","author","setAuthor","useEffect","getQuote","fetch","then","res","json","data","dataQuotes","quotes","randomQuote","Math","floor","random","length","Card","id","className","href","src","twitterIcon","alt","onClick","App","Navbar","expand","Container","Brand","color","dark","NavbarBrand","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sNAAe,I,qBCAA,G,MAAA,IAA0B,qCCsD1BA,EAjDA,WAAO,IAAD,EACSC,mBAAS,IADlB,mBACVC,EADU,KACHC,EADG,OAESF,mBAAS,IAFlB,mBAEZG,EAFY,KAEJC,EAFI,KAMnBC,qBAAU,WACRC,MACC,IAGH,IAAMA,EAAW,WAEfC,MADO,0IAEJC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GACJ,IAAIC,EAAaD,EAAKE,OAElBC,EAAcF,EADFG,KAAKC,MAAMD,KAAKE,SAAWL,EAAWM,SAGtDhB,EAASY,EAAYb,OACrBG,EAAUU,EAAYX,YAW5B,OACE,eAACgB,EAAA,EAAD,CAAMC,GAAG,YAAT,UACE,qBAAKA,GAAG,OAAR,SAAe,4BAAInB,MACnB,qBAAKmB,GAAG,SAAR,SAAiB,4BAAIjB,MAErB,sBAAKiB,GAAG,UAAR,UACE,qBAAKC,UAAU,eAAf,SACE,mBAAGC,KAAK,IAAIF,GAAG,aAAf,SACE,+BAAM,qBAAKG,IAAKC,EAAaC,IAAI,WAGrC,wBAAQC,QAhBM,WAClBpB,KAekCc,GAAG,YAAjC,8B,wBCjBOO,MAzBf,WACE,OACE,sBAAKN,UAAU,MAAf,UACE,cAACO,EAAA,EAAD,CAAQR,GAAG,SAASS,OAAO,KAA3B,SACE,cAACC,EAAA,EAAD,UACA,cAACF,EAAA,EAAOG,MAAR,CAAcT,KAAK,IAAnB,6BAGF,cAAC,EAAD,IAEA,qBAAKD,UAAU,eAAf,SACM,cAACO,EAAA,EAAD,CAAQI,MAAM,OAAOC,MAAI,EAAzB,SACI,cAACH,EAAA,EAAD,UACI,cAACI,EAAA,EAAD,CAAad,GAAG,SAAhB,SACE,mBAAGA,GAAG,WAAN,yCCRPe,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB7B,MAAK,YAAkD,IAA/C8B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.e7b29f31.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.103b5fa1.svg\";","export default __webpack_public_path__ + \"static/media/twitter.ca88c85b.svg\";","import React, { useState, useEffect } from 'react';\r\nimport { Button , Card } from 'react-bootstrap';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport twitterIcon from '../twitter.svg';\r\n\r\nconst Quotes = () => {\r\n    const [quote, setQuote] = useState('');\r\n  const [author, setAuthor] = useState('');\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    getQuote()\r\n  }, []);\r\n\r\n\r\n  const getQuote = () => {\r\n    let url = `https://gist.githubusercontent.com/camperbot/5a022b72e96c4c9585c32bf6a75f62d9/raw/e3c6895ce42069f0ee7e991229064f167fe8ccdc/quotes.json`;\r\n    fetch(url)\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        let dataQuotes = data.quotes;\r\n        let randomNum = Math.floor(Math.random() * dataQuotes.length);\r\n        let randomQuote = dataQuotes[randomNum];\r\n\r\n        setQuote(randomQuote.quote);\r\n        setAuthor(randomQuote.author);\r\n      })\r\n  }\r\n\r\n\r\n\r\n  const handleClick = () => {\r\n    getQuote();\r\n  }\r\n\r\n\r\n  return (\r\n    <Card id=\"quote-box\">\r\n      <div id=\"text\"><p>{quote}</p></div>\r\n      <div id=\"author\"><p>{author}</p></div>\r\n\r\n      <div id=\"buttons\">\r\n        <div className=\"social-media\">\r\n          <a href=\"#\" id=\"twet-quote\">\r\n            <span><img src={twitterIcon} alt=\"\" /></span>\r\n          </a>\r\n        </div>\r\n        <button onClick={handleClick} id=\"new-quote\">New Quote</button>\r\n      </div>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default Quotes;","import logo from './logo.svg';\nimport './App.css';\nimport Quotes from './components/Quotes';\nimport { Navbar , Container , NavbarBrand } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Navbar id=\"navbar\" expand=\"lg\" >\n        <Container>\n        <Navbar.Brand href=\"#\">Motivate-me</Navbar.Brand>\n        </Container>\n      </Navbar>\n      <Quotes/>\n\n      <div className=\"fixed-bottom\">  \n            <Navbar color=\"dark\" dark>\n                <Container>\n                    <NavbarBrand id=\"footer\">\n                      <p id=\"p-footer\">\n                      Developed by BK\n                      </p>\n                    </NavbarBrand>\n                </Container>\n            </Navbar>\n        </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}